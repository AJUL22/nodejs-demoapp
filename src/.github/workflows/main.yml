name: CI/CD Pipeline - Debug Mode

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      # Initial setup
      - name: Checkout code
        uses: actions/checkout@v3

      - name: System Diagnostics
        run: |
          echo "=== SYSTEM INFO ==="
          uname -a
          echo "=== DOCKER STATUS ==="
          sudo systemctl status docker --no-pager || true
          echo "=== DISK SPACE ==="
          df -h
          echo "=== DOCKER ACCESS ==="
          ls -la /var/run/docker.sock || true
          groups
          docker info

      # Node.js setup
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # Build stage
      - name: Install dependencies
        working-directory: src
        run: npm ci

      - name: Run tests
        working-directory: src
        run: npm test

      # Docker operations
      - name: Cleanup Previous Containers
        run: |
          docker stop nodejs-demoapp || true
          docker rm nodejs-demoapp || true
          docker network prune -f || true
          sudo lsof -ti :3000 | xargs -r kill -9 || true

      - name: Build Docker Image
        run: |
          docker build -t nodejs-demoapp ./src
          docker image ls

      # Deployment with full debugging
      - name: Deploy Container
        run: |
          echo "=== STARTING CONTAINER ==="
          docker run -d \
            --name nodejs-demoapp \
            -p 3000:3000 \
            --restart unless-stopped \
            nodejs-demoapp
          
          echo "=== IMMEDIATE CONTAINER STATUS ==="
          docker ps -a
          
          echo "=== WAITING 5 SECONDS ==="
          sleep 5
          
          echo "=== FINAL CONTAINER STATUS ==="
          docker ps -a
          
          echo "=== CONTAINER LOGS ==="
          docker logs nodejs-demoapp || true
          
          echo "=== PORT VERIFICATION ==="
          sudo lsof -i :3000 || true
          netstat -tuln | grep 3000 || true
          curl -v http://localhost:3000 || echo "CURL FAILED"

      # Final verification
      - name: Post-Deployment Checks
        if: always()
        run: |
          echo "=== FINAL STATE ==="
          docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}"
          docker inspect nodejs-demoapp || true
          docker logs nodejs-demoapp --tail 50 || true
          journalctl -u docker --no-pager | tail -20 || true
